name: Ensure Manifest Approval

on:
  pull_request:
    types: [opened, synchronize, reopened, review_requested, review_submitted]

permissions:
  contents: read
  pull-requests: write

jobs:
  require-approval:
    name: Ensure Manifest is Approved
    runs-on: ubuntu-latest
    environment:
      name: ManifestApproval  # üëà Uses GitHub Environment Protection Rules

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Generate Merged AndroidManifest.xml
        run: |
          ./gradlew :app:processDebugManifest
          cp app/build/intermediates/merged_manifests/debug/processDebugManifest/AndroidManifest.xml merged_AndroidManifest.xml

      - name: Check for AndroidManifest.xml Changes
        id: check_manifest
        run: |
          if git diff --no-index --word-diff=plain baseline_AndroidManifest.xml merged_AndroidManifest.xml > manifest_diff.txt; then
            echo "manifest_changed=true" >> $GITHUB_OUTPUT
          else
            echo "manifest_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload Manifest Diff (For Review)
        uses: actions/upload-artifact@v4
        with:
          name: manifest-diff
          path: manifest_diff.txt

      - name: Get PR Approvals (Check for Stale & Authorized Approvals)
        id: check_approvals
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;

            // Get latest commit SHA
            const pr = await github.rest.pulls.get({ owner, repo, pull_number: number });
            const latestCommitSha = pr.data.head.sha;

            // Get all PR reviews
            const reviews = await github.rest.pulls.listReviews({ owner, repo, pull_number: number });

            // Find valid approvals (submitted after the latest commit)
            const validApprovals = reviews.data.filter(r => 
              r.state === "APPROVED" &&
              new Date(r.submitted_at) > new Date(pr.data.updated_at)
            );

            if (validApprovals.length > 0) {
              console.log("‚úÖ PR has a valid approval.");
              core.setOutput("approved", "true");
            } else {
              console.log("‚ùå No valid approvals found.");
              core.setOutput("approved", "false");
            }

      - name: Post PR Comment on Manifest Change
        if: steps.check_manifest.outputs.manifest_changed == 'true' && steps.check_approvals.outputs.approved == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: "‚ùå **Manifest changes detected!**\n\nüö® Please take the necessary approvals for manifest changes before proceeding."
            });

      - name: Fail Workflow if Manifest Changes Detected and No Approval
        if: steps.check_manifest.outputs.manifest_changed == 'true' && steps.check_approvals.outputs.approved == 'false'
        run: |
          echo "‚ùå AndroidManifest.xml has changes!"
          echo "üö® Approval required before proceeding!"
          exit 1  # ‚ùå Fails workflow to block PR merge

  update-baseline:
    name: Update Baseline Manifest
    needs: require-approval
    if: needs.require-approval.result == 'success' && needs.require-approval.outputs.manifest_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Update Baseline Manifest
        run: |
          mv merged_AndroidManifest.xml baseline_AndroidManifest.xml
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add baseline_AndroidManifest.xml
          git commit -m "Update baseline AndroidManifest.xml"
          git push
