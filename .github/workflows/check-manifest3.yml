name: Ensure Manifest Approval

on:
  pull_request:
    types: [opened, synchronize, reopened, review_requested, review_submitted]

permissions:
  contents: read
  pull-requests: write

jobs:
  require-approval:
    name: Ensure Manifest is Approved
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Generate Merged AndroidManifest.xml
        run: |
          ./gradlew :app:processDebugManifest
          cp app/build/intermediates/merged_manifests/debug/processDebugManifest/AndroidManifest.xml merged_AndroidManifest.xml

      - name: Check for AndroidManifest.xml Changes
        id: check_manifest
        run: |
          if git diff --no-index --word-diff=plain baseline_AndroidManifest.xml merged_AndroidManifest.xml > manifest_diff.txt; then
            echo "manifest_changed=false" >> $GITHUB_ENV
          else
            echo "manifest_changed=true" >> $GITHUB_ENV
          fi

      - name: Upload Manifest Diff (For Review)
        uses: actions/upload-artifact@v4
        with:
          name: manifest-diff
          path: manifest_diff.txt

      - name: Check for PR Approvals
        if: env.manifest_changed == 'true'
        id: check_approvals
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const approvedUsers = ["anikamath2", "shubham-patwarika-hs"];  // Allowed reviewers
            const approvals = reviews.filter(review => 
              review.state === "APPROVED" && approvedUsers.includes(review.user.login)
            );

            if (approvals.length > 0) {
              console.log("‚úÖ Manifest changes already approved!");
              console.log("Skipping PR comment & rerun...");
              console.log("Approved by:", approvals.map(r => r.user.login).join(", "));
              console.log("approved=true" >> $GITHUB_ENV)
              exit 0  # ‚úÖ Stop workflow here (NO rerun)
            } else {
              console.log("approved=false" >> $GITHUB_ENV)
            }

      - name: Post PR Comment on Manifest Change
        if: env.manifest_changed == 'true' && env.approved == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: "‚ùå **Manifest changes detected!**\n\nüö® Please take the necessary approvals for manifest changes before proceeding."
            });

      - name: Fail Workflow if Manifest Changes Detected Without Approval
        if: env.manifest_changed == 'true' && env.approved == 'false'
        run: |
          echo "‚ùå AndroidManifest.xml has changes!"
          echo "üö® Approval required before proceeding!"
          exit 1  # ‚ùå Fails workflow to block PR merge

  update-baseline:
    name: Update Baseline Manifest
    needs: require-approval
    if: needs.require-approval.result == 'success' && env.manifest_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Baseline Manifest
        run: |
          cp merged_AndroidManifest.xml baseline_AndroidManifest.xml
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add baseline_AndroidManifest.xml
          git commit -m "Update baseline AndroidManifest.xml"
          git push
